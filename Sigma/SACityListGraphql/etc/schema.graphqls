

type Query {
    City(id: String! @doc(description: "Get City Name from CityId")
    locale: String! @doc(description: "Get locale")
    ): CityNameOutput @resolver(class: "Sigma\\SACityListGraphql\\Model\\Resolver\\CityName")
    @doc(description: "Cities Response")

    RegionCity( code: String! @doc(description: "Get City Name from RegionId")
    ): CityOutput @resolver(class: "Sigma\\SACityListGraphql\\Model\\Resolver\\CityList")
    @doc(description: "Cities Response")
}

type CityNameOutput @doc(description: "The city name and id from city code") {
    items: [CityName]! @doc(description: "An array of cities")
}

type CityName @doc(description: "Contains details about each of the region") {
    id: ID! @doc(description: "The unique ID for a city object")
    city_name: String! @doc(description: "The name of the city")
    locale: String! @doc(description: "Locale of the city")
}

type CityOutput @doc(description: "The collection of city that match the conditions defined in the filter") {
    items: [City]! @doc(description: "An array of cities")
}

type City @doc(description: "Contains details about each of the region") {
    id: ID! @doc(description: "The unique ID for a city object")
    city_name: String! @doc(description: "The name of the city")
}
