
type Query {
    RecentlyViewedProducts( customerId: Int! @doc(description: "Specify the customer Id of the customer.")
    ): RecentlyViewedOutput@resolver(class: "Sigma\\RecentlyViewedProducts\\Model\\Resolver\\RecentlyViewedProducts")  
    @doc(description: "Recently Viewed Products Data.")
}

type RecentlyViewedOutput {
    items: [RecentlyViewed!]! @doc(description: "An array of Recently Viewed Products Collection.")    
}
type RecentlyViewed {
    id: Int
    sku: String
    price: String
    name: String
    url_key: String
    thumbnail_image: String
}

type Mutation {
    AddRecentlyViewed(input: RecentlyViewedInput!): AddRecentlyViewedOutput @resolver(class: "\\Sigma\\RecentlyViewedProducts\\Model\\Resolver\\AddRecentlyViewedProducts") @doc(description:"Add Recently Viewed Products Data")
}

input RecentlyViewedInput {
    customer_id: Int @doc(description: "The customer's id")
    product_id: Int @doc(description: "The product id")
}

type AddRecentlyViewedOutput {
   success_message: String @doc(description: "Success Message")
}