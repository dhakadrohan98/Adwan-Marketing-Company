type Mutation {
    createRma (input: CreateRmaInput!): CreateRmaOutput @resolver(class: "\\Mirasvit\\RmaGraphQl\\Model\\Resolver\\CreateRmaMutation") @doc(description: "#mst Create Rma")
}

input CreateRmaInput @doc(description: "#mst Defines the input to the run createRma mutation") {
    guest_customer: RmaGuestCustomerInput @doc(description: "#mst Defines guest customer information")
    rma_orders: [RmaOrderInput!]! @doc(description: "#mst Defines orders list")
    custom_fields: [RmaCustomFieldInput] @doc(description: "#mst List of custom fields")
    agree_box: Boolean @doc(description: "#mst Agree with RMA policy text")
}

type CreateRmaOutput @doc(description: "#mst Defines the output to the run createRma mutation") {
    rma: Rma! @doc(description: "#mst Rma ID")
}

input RmaGuestCustomerInput @doc(description: "#mst Defines RMA guest customer information") {
    order_id: Int @doc(description: "#mst Order ID")
    customer_email: String! @doc(description: "#mst Customer Email")
    customer_name: String @doc(description: "#mst Customer Name")
}

input RmaOrderInput @doc(description: "#mst Defines RMA order information") {
    order_id: String! @doc(description: "#mst Order or Receipt #")
    store_id: Int! @doc(description: "#mst Storeview ID")
    type: String! @doc(description: "#mst Order type. Allowed values: regular, offline")
    items: [RmaItemInput!]! @doc(description: "#mst List of RMA order items")
}

input RmaItemInput @doc(description: "#mst Defines RMA order item information") {
    order_item_id: Int! @doc(description: "#mst Order item ID")
    qty_requested: Int! @doc(description: "#mst Qty requested to return")
    product_sku: String! @doc(description: "#mst Product Sku")
    condition_id: Int @doc(description: "#mst Condition ID")
    reason_id: Int @doc(description: "#mst Reason ID")
    resolution_id: Int @doc(description: "#mst Resolution ID")
}

input RmaCustomFieldInput @doc(description: "#mst Defines RMA custom field information") {
    code: String @doc(description: "#mst Product Sku")
    value: String @doc(description: "#mst Condition Code")
}

type Rma @doc(description: "#mst Defines RMA information") {
    increment_id: String @doc(description: "#mst RMA #")
    status_id: Int @doc(description: "#mst Status ID")
    date_requested: String @doc(description: "#mst Requested date")
    orders: [RmaOrder] @doc(description: "#mst Defines RMA orders list")
}

type RmaOrder @doc(description: "#mst Defines RMA order information") {
    order_number: String @doc(description: "#mst Order label defines main order information #")
    type: String! @doc(description: "#mst Order type. Allowed values: regular, offline")
    items: [RmaItem] @doc(description: "#mst Defines RMA order items information")
}

type RmaMessages @doc(description: "#mst Defines RMA order information") {
    message_id: String @doc(description: "#mst Order #")
    text: String @doc(description: "#mst RMA message text #")
}

type RmaItem @doc(description: "#mst Defines RMA order item information") {
    image_url: String @doc(description: "#mst Item image")
    item_name: String @doc(description: "#mst Item name")
    item_id: String @doc(description: "#mst Item id")
    item_sku: String @doc(description: "#mst Item sku")
    qty_requested: Int @doc(description: "#mst Item qty requested")
    condition_id: Int @doc(description: "#mst Condition ID")
    reason_id: Int @doc(description: "#mst Reason ID")
    resolution_id: Int @doc(description: "#mst Resolution ID")
}

type RmaMessage @doc(description: "#mst Defines RMA messages information") {
    type: String @doc(description: "#mst Message type. Possible values are: customer, user, system")
    author_name: String @doc(description: "#mst Message author name")
    message: String @doc(description: "#mst Message text")
    date: String @doc(description: "#mst Message date")
    attachments: MessageAttachment @doc(description: "#mst Message attachments information")
}

type MessageAttachment @doc(description: "#mst Message attachment information") {
    name: String @doc(description: "#mst Attachment name")
    url: String @doc(description: "#mst Attachment url")
}

type Query {
    customerRmas: CustomerRmas @resolver(class: "Mirasvit\\RmaGraphQl\\Model\\Resolver\\Rmas") @doc(description: "List of customer RMAs") @cache(cacheable: false)
    rmaDictionary: RmaDictionary @resolver(class: "Mirasvit\\RmaGraphQl\\Model\\Resolver\\RmaDictionary") @doc(description: "List of RMA dictionaries")
}

type CustomerRma @doc(description: "RMA mapping fields") {
    id: String
    increment_id: String @deprecated(reason: "The RMA number.")
    order_id: String
    created_at: String
    status: String
    return_address: String
    orders: [RmaOrder] @doc(description: "#mst Defines RMA orders list")
    messages: [RmaMessages] @doc(description: "#mst RMA messages information")
}

type CustomerRmas {
    items: [CustomerRma] @doc(description: "Array of RMAs")
}

type RmaDictionary {
    statuses: [RmaStatus] @doc(description: "Array of RMA statuses")
    conditions: [RmaCondition] @doc(description: "Array of RMA conditions")
    reasons: [RmaReason] @doc(description: "Array of RMA reasons")
    resolutions: [RmaResolution] @doc(description: "Array of RMA resolutions")
}

type RmaStatus {
    status_id: Int
    name: String @doc(description: "Status name")
    is_active: Boolean @doc(description: "Is status active")
    color: String @doc(description: "Status color")
    is_visible: Boolean @doc(description: "Is status visible in the status bar")
}

type RmaCondition {
    condition_id: Int
    name: String @doc(description: "Condition name")
    is_active: Boolean @doc(description: "Is condition active")
}

type RmaReason {
    reason_id: Int
    name: String @doc(description: "Reason name")
    is_active: Boolean @doc(description: "Is reason active")
}

type RmaResolution {
    resolution_id: Int
    name: String @doc(description: "Resolution name")
    is_active: Boolean @doc(description: "Is resolution active")
}
type Query {
    orderItems( order: String! @doc(description: "Specify the order number")
    ): OrderItemsOutput@resolver(class: "Sigma\\MirasvitRma\\Rewrite\\Mirasvit\\RmaGraphQl\\Model\\Resolver\\OrderItems")
    @doc(description: "Order data")
}
type OrderItemsOutput {
    items: [OrderItemsArray!]! @doc(description: "An array of Orders Collection.")
}
type OrderItemsArray {
    id: Int @doc(description: "Order Id")
    order_item_id: String @doc(description: "Order Item Id")
    sku: String @doc(description: "Product Sku")
}

